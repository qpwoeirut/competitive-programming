s = 3025629929455235703527304119679712603378708082824538501309596005578542637249395049317406452450537495357353892114061355874720871324458428713066257825607082670739716251929036165757934812995684018868833351115580232228766767104012403680055535590228843494050895844276387272678156121603975412946745036230271789236660174299905041639654919039357986734436424415201982201943996216558144805339423220937219963879355962856870028434440921545819599929352761494207523101603714610723554955982354592530502415262764500679973382818739894204712443179425177436227914408796876489210921019410241123606836519019034103208513023099889847080559018823651784090164803208150348468027992779726888688840527965703811478133926965119488177575589101318271444841505854444100951338009048188482445643068717754627576963594871633118562282193229242782159852805417243559310595755938914826227606750680526027116493573120970512143985219829533652603075415399501112217230742401777508697922076619142567761833649117597431736976959390889625263371372690833807015144915010185084656712174807064056493498197382467180471580694904293154876586720309844644852117185561396908608838207701327327679216264798927240313490033766333419531287937690995912198764190593452197294525787163271649487768561580604188407895926034687831433927254536552300640777560773746315222060941584641571736307413409959481863583755433981134234981174740874935782858008667142612023945552524751631226890904555283462313272763843995864931783599138009627509945850283839830720091711142856094612087020151716052942301611189900110214314704816487890278664949494550294164386100595748300025497898119266318460094688486289475310004155368547936124219053957536800417977302732722705273669161053609865748824551332596406070776231356557244821627838910529013432515129173329920886431360933870791410741763272194264317756277373041803121278550057860401233449837903706026538852038895570294307530108142976207340611691960182249124125023432370433068790494729668398074208683155543928916573537361205944965265862677522901782747641540178240588441013295632710141434537398983103760144465253435452704030641876879128815785806329237158269867231393594894350593497734400943261748117441721856289873836986251363516121076852414047489527634909613447051681735716781610545621132504249140083197806642433499129243135226629233348344911662245944328345992964135431412073665697822204804318960556047441747053673728135653075118200481501115940964109791269399182099416723977739210299062770442350700041557411289903317421192806223964365210921808544159711474270716712231414673618929883145512830123961575705395201404392454646894659599503102185638214798640655024973453556029163812189326241711712495209919211979806013228214577575235146100350534116828337834953221172751349108140283131813321220934863561979676315948461737852861609892884404256229969324144205328855185357123263223022111476052107748435434356258963004836204060411421612168064166551073046222022345583569840692118

from utils.rsa.rsa_util import plaintext_pq
from utils.basics import dec_to_ascii, hex_to_ascii

p = 2**9689 - 1
q = 7
e = 65537

c = plaintext_pq(s, e, p, q)
c = hex(c)[2:]
c = c[::-1]
print(hex_to_ascii(c))
# from gunnCryptoClub.cryptanalysis.cipherStats import main
#
# main()