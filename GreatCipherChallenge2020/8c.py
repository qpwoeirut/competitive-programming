from itertools import product

from utils.cryptography.analyze import quick_analyze
from utils.cryptography.straddle_checkerboard import solve
from utils.factors import find_factors

s
print(find_factors(len(s)))
for r in solve(s):
    print(r)
print()
s = s[::-1]
for r in solve(s):
    print(r)
# best = (float('inf'), "", "")
# for i in range(1, 5):
#     for sub in product("012345", repeat=i):
#         s1 = ''.join([str(int(c) + int(sub[idx % i])) for idx,c in enumerate(s)])
#         texts = solve(s)
#         best = min(best, texts[0])
#     print(best)


#ttessenceswhersspettrendlenanandledinnenceblenotteryawingaswhenandletteryaprettesmaittgewingaswhenondlenodinneprettrewinganceblenodinnendlellcersspenawingandlebletteryawingassencersspewingancenanallcendlellceswhepressewingattrewingatteryawingarsspesmattresmadinnesmaittgewingaswhenceblenotteryawingallcesmallcewingattrencetteryaswhesmadilrtettedinnettrencersspewingarsspewingassencettrewingatteryawingarnyencersspersspewingattressesmadllbedturdsnellcepreswhesmabletteryawingarnyencesseswhetteryancettersspendlettewingatteryawingadllbenancesseswhetteryancettedllbencettedllberyarsspewingassencettrewingatteryawingarnyedilrtersspernyedilrtersspersspendlettrenonceblenoswheryadilrtebletteryawingaiiettredilrtellcendlesmadilrteswhersspenceblenowingattreswheblencettedllberyaryawingattesmasmadturdsneryandleswheittgesmattreickencenaswhessesmattrenondlebleryanceblenonasmabledinnettendlellcewingatteryawingallcenceblelesmallcewingaiiesmawingaryawingaswhesmadilrtedinneryatteswhesmattrewingaswhettewinganoryawingarsspepretteryawingattedilrtellcettedilrtellcettettrewingawinganceblenoswhettesmasmanoncesseryandlenawingandlebletteryasmadilrtedinneryattenceblenonceswhendlebledilrteiieiiendleswheryatteryasmadilrtedinneryatteryawingaswhettesmasmanotteryawingarnyencersspersspewingattressesmadllbedturdsnessendletteryawingaprewingaswhesmaiieiienancellcewingadllbencellcewingasseryandleiieiienandlebledinnetteryattresmadilrtedinneryatteryawingattedilrtenadinnewingapressesmasmanonceblenorsspedilrtettrersspenawinganonceswhendlettedllbencellcewingasmablewingattessesmasmablewingattessesmanceblenotteryattresmadilrtedinneryanceblenotteryattresmadilrtedinneryatteryawingaittgesmattreickencenarsspenancenowingassewingabletteswheblendledllbedturdsnewingattreswheblencedllbedturdsneryawinganawingaiiettendlettenowingancenonceblenossendletteryandletteswheryawingancenoryawingassewingablettedinnencenadilrtellceickeryandlebledinnersspencedllbedturdsnenceblenoryanceswhettetteryasmadilrteswhenancendlebletteryawingarnyencersspersspewingattressesmadllbedturdsnedllbesmallcewingattesmallceprencettrellceswhellceprersspewingancellcendleswheryarsspesmapresmaiiettrencersspernyesmadilrteswhenoncepredllbencenanasmasmaryadllbencenanancepreryawingadllberyasmattrettenawinganondlebleryandleswhernyesmaprettessenceswhersspettrendlenanandledinnenceblenotteryawingaswhenandletteryaprettesmaittgewingaswhenondlenodinneprettrewinganceblenodinnendlellcersspenawingandlebletteryawingassencersspewingancenanallcendlellceswhepressewingattrewingatteryawingarsspesmattresmadinnesmaittgewingaswhenceblenotteryawingallcesmallcewingattrencetteryaswhesmadilrtettedinnettrencersspewingw

s = "TWASBRILLIGANDTHESLITHYTOVESDIDGYREANDGIMBLEINTHEWABEALLMIMSYWERETHEBOROGOVESANDTHEMOMERATHSOUTGRABEBEWARETHEJABBERWOCKMYSONTHEJAWSTHATBITETHECLAWSTHATCATCHBEWARETHEJUBJUBBIRDANDSHUNTHEFRUMIOUSBANDERSNATCHHETOOKHISVORPALSWORDINHANDLONGTIMETHEMANXOMEFOEHESOUGHTSORESTEDHEBYTHETUMTUMTREEANDSTOODAWHILEINTHOUGHTANDASINUFFISHTHOUGHTHESTOODTHEJABBERWOCKWITHEYESOFFLAMECAMEWHIFFLINGTHROUGHTHETULGEYWOODANDBURBLEDASITCAMEONETWOONETWOANDTHROUGHANDTHROUGHTHEVORPALBLADEWENTSNICKERSNACKHELEFTITDEADANDWITHITSHEADHEWENTGALUMPHINGBACKANDHASTTHOUSLAINTHEJABBERWOCKCOMETOMYARMSMYBEAMISHBOYOFRABJOUSDAYCALLOOHCALLAYHECHORTLEDINHISJOYTWASBRILLIGANDTHESLITHYTOVESDIDGYREANDGIMBLEINTHEWABEALLMIMSYWERETHEBOROGOVESANDTHEMOMERATHSOUTGRABE"
s = [c.upper() for c in s if c.isalpha()]
s = ''.join(s)
s = s.replace('X', 'Z')
print(s)
print(len(s))